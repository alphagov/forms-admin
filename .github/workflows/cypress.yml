# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Cypress CI"
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432"
      API_BASE: http://localhost:9292
      API_KEY: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: alphagov/forms-api
          path: forms-api
          ref: main
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: forms-api
          push: false
          tags: forms-api
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8ddb7b3348b3951590db24c346e94ebafdabc926 # v1.117
        with:
          bundler-cache: true
      - name: Install frontend dependencies
        run: yarn
      - name: Run Frontend build
        run: yarn build & yarn build:css
      - name: Run Cypress tests
        uses: cypress-io/github-action@v4
        with:
          install: false
          start: yarn run ci, docker run -p 9292:9292 --network=host -e DATABASE_URL=postgres://rails:password@localhost:5432 -e API_KEY=test --name forms-api forms-api
          wait-on: "http://localhost:3000"
          env: API_KEY=test
      - name: Archive cypress artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress
          path: |
            cypress/videos
            cypress/screenshots
