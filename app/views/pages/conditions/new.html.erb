<%# TODO: route_number is hardcoded as 1 here because we know there can be only two conditions. It will need to change in the future %>
<% set_page_title(title_with_error_prefix(t('page_titles.routing_page_new', route_number: 1), condition_input.errors&.any?)) %>
<% content_for :back_link, govuk_back_link_to(routing_page_path(condition_input.form.id, routing_page_id: condition_input.page.id)) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <%= form_with(model: condition_input, url: create_condition_path(condition_input.form.id), method: 'POST') do |f| %>
      <% if condition_input&.errors.any? %>
        <%= f.govuk_error_summary %>
      <% end %>

      <h1 class="govuk-heading-l">
        <span class="govuk-caption-l"><%= t("page_titles.routing_page_caption", question_number: condition_input.page.position) %></span>
        <%= t("page_titles.routing_page_new", route_number: 1) %>
      </h1>

      <%= t('pages.conditions.hint_html', question_number: condition_input.page.position, continue_to_question_number: condition_input.next_page_number) %>

      <%= govuk_summary_list do |summary_list|
        summary_list.with_row do |row|
          row.with_key { t("page_route_card.question_name_short", question_number: condition_input.page.position) }
          row.with_value { condition_input.page.question_text }
          row.with_action(text: "Change", href: routing_page_path(condition_input.form.id, routing_page_id: condition_input.page.id), visually_hidden_text: "routing question")
        end;
      end %>

      <%= f.govuk_collection_select :answer_value, condition_input.routing_answer_options, :value, :label, label: { class: "govuk-!-font-weight-bold" }, options: { include_blank: t("helpers.label.pages_conditions_input.default_answer_value") } %>
      <% unless FeatureService.new(group: condition_input.form.group).enabled?(:exit_pages) %>
        <%= f.govuk_collection_select :goto_page_id, condition_input.goto_page_options, :id, :question_text, label: { class: "govuk-!-font-weight-bold" }, options: { include_blank: t("helpers.label.pages_conditions_input.default_goto_page_id") } %> 
      <% else %>
        <%= f.govuk_select(:goto_page_id, label: { class: "govuk-!-font-weight-bold" }, options: { include_blank: t("helpers.label.pages_conditions_input.default_goto_page_id") }) do %>
          <% condition_input.goto_page_options.each do |option| %>
            <option value=<%= option.id %>>
              <%= option.question_text %>
            </option>
          <% end %>
          <optgroup label="<%= I18n.t("page_conditions.exit_page_label") %>">
            <option value="exit_page">
              <%= I18n.t("page_conditions.exit_page") %>
            </option>
          </optgroup>
        <% end %>
      <% end %>

      <%= f.govuk_submit t("save_and_continue") %>
    <% end %>
  </div>
</div>
