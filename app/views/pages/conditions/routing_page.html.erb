<% set_page_title(title_with_error_prefix(t('page_titles.routing_page'), routing_page_input.errors&.any?)) %>
<% content_for :back_link, govuk_back_link_to(form_pages_path(form.id)) %>
<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <% branch_routing_enabled = FeatureService.new(group: form.group).enabled?(:branch_routing) %>
    <% exit_pages_enabled = FeatureService.new(group: form.group).enabled?(:exit_pages) %>

    <% if exit_pages_enabled %>
      <% prefix = 'exit_pages.' %>
    <% elsif branch_routing_enabled %>
      <% prefix = 'branch_routing.' %>
    <% else %>
      <% prefix = '' %>
    <% end %>

    <% if policy(form).can_add_page_routing_conditions? %>
      <%= render partial: "pages/conditions/routing_options", locals: {form:, routing_page_input:} %>
    <% else %>
      <h1 class="govuk-heading-l">
        <span class="govuk-caption-l"><%= form.name %> </span>
        <%= t("page_titles.routing_page") %>
      </h1>

      <%= t("routing_page.#{prefix}body_html") %>

      <%= t("routing_page.#{prefix}#{form.has_no_remaining_routes_available? ? 'no_remaining_routes' : 'routing_requirements_not_met'}_html") %>
    <% end %>

    <p>
      <%= govuk_link_to t('pages.go_to_your_questions'), form_pages_path(form.id) %>
    </p>
  </div>
</div>
